pipeline {
    agent any
    
    stages {
        stage('Build') {
            steps {
                // Build your code using a build automation tool (e.g., Maven).
                // Example: sh 'mvn clean package'
            }
        }
        stage('Unit and Integration Tests') {
            steps {
                // Run unit and integration tests using test automation tools.
            }
        }
        stage('Code Analysis') {
            steps {
                // Integrate a code analysis tool (e.g., SonarQube) to analyze your code.
            }
        }
        stage('Security Scan') {
            steps {
                // Perform a security scan using a security scanning tool (e.g., OWASP ZAP).
            }
        }
        stage('Deploy to Staging') {
            steps {
                // Deploy your application to a staging server (e.g., AWS EC2).
            }
        }
        stage('Integration Tests on Staging') {
            steps {
                // Run integration tests on the staging environment.
            }
        }
        stage('Deploy to Production') {
            steps {
                // Deploy your application to a production server (e.g., AWS EC2).
            }
        }
    }

    post {
        success {
            // Send email notification on success.
            emailext subject: 'Pipeline Success',
                      body: 'The Jenkins pipeline completed successfully.',
                      to: 'gssravanthi31@gmail.com'
        }
        failure {
            // Send email notification on failure.
            emailext subject: 'Pipeline Failure',
                      body: 'The Jenkins pipeline failed. Please check the logs.',
                      to: 'gssravanthi31@gmail.com'
        }
    }
}
